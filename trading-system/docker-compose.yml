# docker-compose.yml

version: '3.8'

services:
  postgres:
    image: timescale/timescaledb:latest-pg14
    container_name: trading_db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: trading_broker
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    restart: unless-stopped

  django-backend:
    build: ./services/django-backend
    container_name: trading_api
    command: >
      sh -c "python manage.py migrate &&
             gunicorn trading_system.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - ./services/django-backend:/app
    ports:
      - "8000:8000"
    env_file: .env
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  frontend:
    build: ./services/frontend
    container_name: trading_ui
    ports:
      - "3001:3001"
    depends_on:
      - django-backend
    restart: unless-stopped

  forecast-engine:
    build: ./services/forecast-engine
    container_name: trading_forecast
    command: python main.py
    env_file: .env
    depends_on:
      - postgres
      - redis
    restart: on-failure

  risk-engine:
    build: ./services/risk-engine
    container_name: trading_risk
    command: python main.py
    env_file: .env
    depends_on:
      - postgres
      - redis
    restart: on-failure

  lean-execution:
    build: ./services/lean-execution
    container_name: trading_execution
    env_file: .env
    depends_on:
      - redis
    restart: on-failure

volumes:
  postgres_data:
